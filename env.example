# =============================================================================
# POLKADOT VOTING TOOL - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# 
# REQUIRED CONFIGURATION - These must be set for the application to work
# =============================================================================

# Application Configuration
# Refresh interval in seconds (how often to check for new referendas)
REFRESH_INTERVAL=900

# Polkadot/Kusama Multisig Configuration
# Your multisig addresses for Polkadot and Kusama networks
POLKADOT_MULTISIG=your_polkadot_multisig_address_here
KUSAMA_MULTISIG=your_kusama_multisig_address_here

# Proposer Account
# Mnemonic phrase for the account that will propose transactions
PROPOSER_MNEMONIC=your_twelve_word_mnemonic_phrase_here

# API Keys
# Get your Subscan API key from: https://subscan.io/
SUBSCAN_API_KEY=your_subscan_api_key_here

# =============================================================================
# OPTIONAL CONFIGURATION - These have default values
# =============================================================================

# Server Configuration
PORT=3000
NODE_ENV=production
LOG_LEVEL=info

# Database Configuration
# Path to SQLite database file (optional - defaults to voting_tool.db in working directory)
# DATABASE_PATH=/app/data/voting_tool.db

# Authentication Configuration
# JWT secret for Web3 authentication (change this in production!)
JWT_SECRET=your-super-secret-jwt-key-change-in-production

# Sync Configuration
# Deep sync runs once daily at the specified hour (UTC)
DEEP_SYNC_LIMIT=100
DEEP_SYNC_HOUR=3

# Monitoring Configuration
# How often to check for ready votes (in seconds)
READY_CHECK_INTERVAL=60

# Development/Testing Configuration
# (No development-specific environment variables currently needed)

# =============================================================================
# TESTING CONFIGURATION (Optional - only needed for running tests)
# =============================================================================

# Sandbox Configuration for Integration Tests
# SANDBOX_PROPOSER_MNEMONIC=test_mnemonic_here
# SANDBOX_KUSAMA_MULTISIG=test_kusama_multisig_here  
# SANDBOX_POLKADOT_MULTISIG=test_polkadot_multisig_here

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. MULTISIG SETUP:  
#    - Set up multisig wallets on Polkadot and Kusama
#    - Add the addresses to POLKADOT_MULTISIG and KUSAMA_MULTISIG
#    - These are used for on-chain voting operations
#
# 2. PROPOSER ACCOUNT:
#    - Create or use existing account for proposing transactions
#    - Add the 12-word mnemonic to PROPOSER_MNEMONIC
#    - Ensure this account has sufficient funds for transaction fees
#
# 3. API KEYS:
#    - Register at https://subscan.io/ and get an API key
#    - Add the key to SUBSCAN_API_KEY
#    - This is used for fetching multisig member information
#
# 4. DATABASE:
#    - SQLite database will be automatically created
#    - Database file will be stored as voting_tool.db (or path specified in DATABASE_PATH)
#    - For Docker: database will be persisted in mounted volume
#
# 5. EXTENSION SETUP:
#    - Install the Chrome/Firefox extension separately
#    - Extension will connect to this backend API
#    - Configure extension to point to your backend URL
#
# 6. TEST THE SETUP:
#    - Run: docker-compose up --build
#    - Check logs for any configuration errors
#    - Visit http://localhost:3000/health to verify the server is running
#    - Install and configure the browser extension
#
# 7. PRODUCTION DEPLOYMENT:
#    - Change JWT_SECRET to a strong, unique value
#    - Set NODE_ENV=production
#    - Consider setting LOG_LEVEL=warn or LOG_LEVEL=error
#    - Ensure all multisig addresses and API keys are correct
#    - Ensure DATABASE_PATH points to a persistent location
#
# ============================================================================= 